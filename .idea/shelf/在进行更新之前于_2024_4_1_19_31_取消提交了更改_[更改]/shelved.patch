Index: src/main/java/cn/nanven/mindmap/view/NodeView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.view;\r\n\r\nimport cn.nanven.mindmap.dao.NodeDao;\r\nimport cn.nanven.mindmap.modal.NodeEntity;\r\nimport cn.nanven.mindmap.service.NodeService;\r\nimport javafx.scene.Cursor;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.layout.AnchorPane;\r\n\r\npublic class NodeView extends AnchorPane {\r\n    private static final String BASE_CLASS = \"node-box\";\r\n    private static final String TEXT_CLASS = \"node-text\";\r\n\r\n    private NodeEntity nodeEntity;\r\n    private TextField textField;\r\n\r\n    private NodeView() {\r\n    }\r\n\r\n    public NodeView(NodeEntity nodeEntity) {\r\n        this.nodeEntity = nodeEntity;\r\n        textField = new TextField();\r\n\r\n        this.getStyleClass().add(BASE_CLASS);\r\n        this.layoutXProperty().bind(nodeEntity.xProperty());\r\n        this.layoutYProperty().bind(nodeEntity.yProperty());\r\n        this.prefWidthProperty().bind(nodeEntity.widthProperty());\r\n        this.prefHeightProperty().bind(nodeEntity.heightProperty());\r\n        this.backgroundProperty().bind(nodeEntity.backgroundProperty());\r\n\r\n        nodeEntity.actualWidthProperty().bind(this.widthProperty());\r\n        nodeEntity.actualHeightProperty().bind(this.heightProperty());\r\n\r\n\r\n        textField.getStyleClass().add(TEXT_CLASS);\r\n        AnchorPane.setTopAnchor(textField, 0.0);\r\n        AnchorPane.setRightAnchor(textField, 0.0);\r\n        AnchorPane.setBottomAnchor(textField, 0.0);\r\n        AnchorPane.setLeftAnchor(textField, 0.0);\r\n        textField.setPrefWidth(-1);\r\n        textField.textProperty().bindBidirectional(nodeEntity.contentProperty());\r\n        textField.alignmentProperty().bind(nodeEntity.alignmentProperty());\r\n        textField.setStyle(\"-fx-text-fill:#\" + nodeEntity.getColor().toString().substring(2));\r\n        textField.fontProperty().bind(nodeEntity.fontProperty());\r\n        textField.disableProperty().bind(nodeEntity.disabledProperty());\r\n        nodeEntity.fontUnderlineProperty().addListener((e, prev, value) -> {\r\n            if (value) {\r\n                textField.getStyleClass().add(\"underline\");\r\n            } else textField.getStyleClass().remove(\"underline\");\r\n        });\r\n\r\n        this.getChildren().add(textField);\r\n        addListener();\r\n    }\r\n\r\n    private void addListener() {\r\n        //定义偏移量\r\n        final double[] mouseAnchor = new double[2];\r\n\r\n        nodeEntity.deleteSymbolProperty().addListener(e -> {\r\n            NodeService.getInstance().removeNode(this);\r\n        });\r\n        nodeEntity.colorProperty().addListener(e -> {\r\n            textField.setStyle(\"-fx-text-fill:#\" + nodeEntity.getColor().toString().substring(2));\r\n        });\r\n        this.setOnMouseClicked(e -> {\r\n            this.requestFocus();\r\n            if (e.getClickCount() == 2) {\r\n                this.nodeEntity.setDisabled(false);\r\n                textField.requestFocus();\r\n            }\r\n            NodeService.getInstance().selectNode(this);\r\n            e.consume();\r\n        });\r\n        this.setOnKeyPressed(e -> {\r\n            switch (e.getCode()) {\r\n                case ENTER -> NodeService.getInstance().addBroNode();\r\n                case TAB -> NodeService.getInstance().addSubNode();\r\n                case DELETE -> NodeDao.deleteNode(this.getNodeEntity());\r\n                case ESCAPE -> NodeService.getInstance().selectNode(null);\r\n                default -> focusText();\r\n            }\r\n        });\r\n        textField.setOnKeyPressed(e -> {\r\n            switch (e.getCode()) {\r\n                case TAB -> {\r\n                    NodeService.getInstance().addSubNode();\r\n                    e.consume();\r\n                }\r\n            }\r\n        });\r\n        this.setOnMouseMoved(e -> {\r\n            if (e.getX() > this.getWidth() - 8 && e.getX() < this.getWidth() + 8 && e.getY() > this.getHeight() - 8 && e.getY() < this.getHeight() + 8) {\r\n                this.setCursor(Cursor.SE_RESIZE);\r\n            } else if (e.getX() > this.getWidth() - 8 && e.getX() < this.getWidth() + 8) {\r\n                this.setCursor(Cursor.E_RESIZE);\r\n            } else if (e.getY() > this.getHeight() - 8 && e.getY() < this.getHeight() + 8) {\r\n                this.setCursor(Cursor.S_RESIZE);\r\n            } else {\r\n                this.setCursor(Cursor.DEFAULT);\r\n            }\r\n        });\r\n        this.setOnMousePressed(e -> {\r\n            mouseAnchor[0] = e.getSceneX() - this.getLayoutX();\r\n            mouseAnchor[1] = e.getSceneY() - this.getLayoutY();\r\n        });\r\n        this.setOnMouseDragged(e -> {\r\n            NodeService.getInstance().dragNode(this, mouseAnchor[0], mouseAnchor[1], e);\r\n        });\r\n        this.setOnMouseReleased(e -> {\r\n            NodeService.getInstance().dragDoneNode(this, e);\r\n        });\r\n    }\r\n\r\n    public NodeEntity getNodeEntity() {\r\n        return nodeEntity;\r\n    }\r\n\r\n    public void focusText() {\r\n        this.nodeEntity.setDisabled(false);\r\n        this.textField.requestFocus();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/view/NodeView.java b/src/main/java/cn/nanven/mindmap/view/NodeView.java
--- a/src/main/java/cn/nanven/mindmap/view/NodeView.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/view/NodeView.java	(date 1711639749172)
@@ -3,6 +3,7 @@
 import cn.nanven.mindmap.dao.NodeDao;
 import cn.nanven.mindmap.modal.NodeEntity;
 import cn.nanven.mindmap.service.NodeService;
+import cn.nanven.mindmap.store.StoreManager;
 import javafx.scene.Cursor;
 import javafx.scene.control.TextField;
 import javafx.scene.layout.AnchorPane;
@@ -58,6 +59,7 @@
         final double[] mouseAnchor = new double[2];
 
         nodeEntity.deleteSymbolProperty().addListener(e -> {
+            this.nodeEntity = null;
             NodeService.getInstance().removeNode(this);
         });
         nodeEntity.colorProperty().addListener(e -> {
@@ -101,6 +103,7 @@
             }
         });
         this.setOnMousePressed(e -> {
+            StoreManager.getAuxiliaryNode().render(nodeEntity);
             mouseAnchor[0] = e.getSceneX() - this.getLayoutX();
             mouseAnchor[1] = e.getSceneY() - this.getLayoutY();
         });
@@ -108,7 +111,7 @@
             NodeService.getInstance().dragNode(this, mouseAnchor[0], mouseAnchor[1], e);
         });
         this.setOnMouseReleased(e -> {
-            NodeService.getInstance().dragDoneNode(this, e);
+            NodeService.getInstance().dragDoneNode(this, mouseAnchor[0], mouseAnchor[1], e);
         });
     }
 
Index: src/main/java/cn/nanven/mindmap/dao/NodeDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.dao;\r\n\r\nimport cn.nanven.mindmap.modal.NodeEntity;\r\nimport cn.nanven.mindmap.service.ToolbarService;\r\nimport cn.nanven.mindmap.store.StoreManager;\r\nimport cn.nanven.mindmap.util.StyleUtil;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.paint.Paint;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontPosture;\r\nimport javafx.scene.text.FontWeight;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NodeDao {\r\n    private static final List<NodeEntity> rootNodeList = StoreManager.getRootNodeList();\r\n\r\n    private static void doDeleteNode(NodeEntity node) {\r\n        if (!node.getChildren().isEmpty()) {\r\n            for (NodeEntity child : node.getChildren()) {\r\n                doDeleteNode(child);\r\n            }\r\n        }\r\n        node.setParent(null);\r\n        node.setChildren(null);\r\n        node.delete();\r\n    }\r\n\r\n    public static void deleteNode(NodeEntity node) {\r\n        if (node.getParent() == null) {\r\n            StoreManager.getRootNodeList().remove(node);\r\n        } else {\r\n            node.getParent().getChildren().remove(node);\r\n        }\r\n        StoreManager.setSelectedNode(null);\r\n        ToolbarService.getInstance().syncState();\r\n        doDeleteNode(node);\r\n    }\r\n\r\n    public static NodeEntity newNode(NodeEntity parent, NodeEntity prevNode) {\r\n        NodeEntity node = newBean(prevNode);\r\n        node.setParent(parent);\r\n        node.setChildren(new ArrayList<>());\r\n\r\n        parent.getChildren().add(node);\r\n        return node;\r\n    }\r\n\r\n    public static NodeEntity newNode(NodeEntity parent) {\r\n        NodeEntity node = newBean(parent);\r\n        node.setParent(parent);\r\n        node.setChildren(new ArrayList<>());\r\n\r\n        parent.getChildren().add(node);\r\n        return node;\r\n    }\r\n\r\n    public static NodeEntity newNode() {\r\n        NodeEntity node = newBean(null);\r\n        rootNodeList.add(node);\r\n        node.setParent(null);\r\n        node.setChildren(new ArrayList<>());\r\n\r\n        return node;\r\n    }\r\n\r\n    private static NodeEntity newBean(NodeEntity template) {\r\n        NodeEntity node = new NodeEntity();\r\n        if (template == null) {\r\n            node.setAlignment(Pos.CENTER_LEFT);\r\n            node.setContent(\"新节点\");\r\n            node.setX(50);\r\n            node.setY(50);\r\n            node.setHeight(42);\r\n            node.setWidth(86);\r\n            node.setDisabled(false);\r\n            node.setBackground(StyleUtil.newBackground(\"rgb(211,227,253)\"));\r\n            node.setColor(Paint.valueOf(\"#212121\"));\r\n            node.setFont(Font.font(\"system\", FontWeight.NORMAL, FontPosture.REGULAR, 14));\r\n            node.setFontUnderline(false);\r\n        } else {\r\n            node.setAlignment(template.getAlignment());\r\n            node.setContent(\"新节点\");\r\n            node.setX(50);\r\n            node.setY(50);\r\n            node.setHeight(42);\r\n            node.setDisabled(false);\r\n            node.setWidth(template.getWidth());\r\n            node.setBackground(template.getBackground());\r\n            node.setColor(template.getColor());\r\n            node.setFont(template.getFont());\r\n            node.setFontUnderline(template.isFontUnderline());\r\n        }\r\n\r\n        return node;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/dao/NodeDao.java b/src/main/java/cn/nanven/mindmap/dao/NodeDao.java
--- a/src/main/java/cn/nanven/mindmap/dao/NodeDao.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/dao/NodeDao.java	(date 1711969236404)
@@ -9,7 +9,6 @@
 import javafx.scene.text.Font;
 import javafx.scene.text.FontPosture;
 import javafx.scene.text.FontWeight;
-
 import java.util.ArrayList;
 import java.util.List;
 
@@ -27,6 +26,21 @@
         node.delete();
     }
 
+    public static void moveNode(NodeEntity node, NodeEntity parent, int index) {
+
+        if (node.getParent() == parent) {
+            int prevIndex = parent.getChildren().indexOf(node);
+            parent.getChildren().remove(prevIndex);
+            if (index > prevIndex) {
+                parent.getChildren().add(index - 1, node);
+            } else parent.getChildren().add(index, node);
+        } else {
+            node.getParent().getChildren().remove(node);
+            parent.getChildren().add(index, node);
+            node.setParent(parent);
+        }
+    }
+
     public static void deleteNode(NodeEntity node) {
         if (node.getParent() == null) {
             StoreManager.getRootNodeList().remove(node);
Index: src/main/java/cn/nanven/mindmap/service/layout/MindMapLayout.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.service.layout;\r\n\r\nimport cn.nanven.mindmap.modal.NodeEntity;\r\nimport cn.nanven.mindmap.service.LayoutService;\r\nimport cn.nanven.mindmap.store.StoreManager;\r\n\r\nimport java.util.List;\r\n\r\npublic class MindMapLayout implements LayoutService {\r\n    private final Double MARGIN_V = 16.0;\r\n    private final Double MARGIN_H = 64.0;\r\n\r\n    private void doBounds(NodeEntity node) {\r\n        double bounds = 0.0;\r\n        if (node.getChildren().isEmpty()) {\r\n            bounds = node.getActualHeight();\r\n        } else {\r\n            for (NodeEntity child : node.getChildren()) {\r\n                doBounds(child);\r\n                bounds += child.getBounds() + MARGIN_V;\r\n            }\r\n        }\r\n\r\n        //子节点高度和小于此节点高度\r\n        if (bounds < node.getActualHeight()) {\r\n            bounds = node.getActualHeight();\r\n        }\r\n        node.setBounds(bounds);\r\n    }\r\n\r\n    private void doLayout(NodeEntity node) {\r\n        if (node.getParent() != null) {\r\n            List<NodeEntity> broNodeList = node.getParent().getChildren();\r\n            NodeEntity parent = node.getParent();\r\n            int index = broNodeList.indexOf(node);\r\n            double top = parent.getY() + parent.getActualHeight() / 2 - parent.getBounds() / 2;\r\n\r\n            for (int i = 0; i < index; i++) {\r\n                top += broNodeList.get(i).getBounds() + MARGIN_V;\r\n            }\r\n\r\n            top += node.getBounds() / 2 - node.getActualHeight() / 2 + MARGIN_V / 2;\r\n            node.setY(top);\r\n            node.setX(parent.getX() + parent.getActualWidth() + MARGIN_H);\r\n\r\n        }\r\n        for (NodeEntity child : node.getChildren()) {\r\n            doLayout(child);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void layout() {\r\n        for (NodeEntity root : StoreManager.getRootNodeList()) {\r\n            doBounds(root);\r\n            doLayout(root);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/service/layout/MindMapLayout.java b/src/main/java/cn/nanven/mindmap/service/layout/MindMapLayout.java
--- a/src/main/java/cn/nanven/mindmap/service/layout/MindMapLayout.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/service/layout/MindMapLayout.java	(date 1711970114262)
@@ -1,14 +1,30 @@
 package cn.nanven.mindmap.service.layout;
 
+import cn.nanven.mindmap.dao.NodeDao;
 import cn.nanven.mindmap.modal.NodeEntity;
 import cn.nanven.mindmap.service.LayoutService;
 import cn.nanven.mindmap.store.StoreManager;
+import javafx.scene.layout.Pane;
 
 import java.util.List;
 
 public class MindMapLayout implements LayoutService {
     private final Double MARGIN_V = 16.0;
     private final Double MARGIN_H = 64.0;
+    private final Pane canvas;
+    private final Pane indicator;
+    private NodeEntity parent;
+    private NodeEntity brother;
+    private int direction;
+
+    public MindMapLayout(Pane canvas) {
+        this.canvas = canvas;
+        this.indicator = new Pane();
+        this.indicator.setPrefHeight(4);
+        this.indicator.setVisible(false);
+
+        canvas.getChildren().add(indicator);
+    }
 
     private void doBounds(NodeEntity node) {
         double bounds = 0.0;
@@ -57,4 +73,61 @@
         }
     }
 
+    @Override
+    public void indicate(NodeEntity node, double x, double y) {
+        double bottom = y - (node.getY() + node.getActualHeight() / 2);
+        double right = x - (node.getX() + node.getActualWidth() / 2);
+
+        if (Math.abs(bottom) > node.getActualHeight() + 64 || Math.abs(right) > node.getActualWidth() + 64 || node.getParent() == null) {
+            parent = null;
+            indicator.setVisible(false);
+            return;
+        }
+
+        indicator.setBackground(node.getBackground());
+        indicator.setPrefWidth(node.getActualWidth());
+
+        if (right > node.getActualWidth() / 2) {
+            //右吸附
+            indicator.setLayoutX(node.getX() + node.getActualWidth());
+            indicator.setLayoutY(node.getY() + node.getActualHeight() / 2 - 2);
+
+            parent = node;
+            brother = null;
+        } else if (bottom > 0) {
+            //下吸附
+            indicator.setLayoutX(node.getX());
+            indicator.setLayoutY(node.getY() + node.getActualHeight() + (MARGIN_V - indicator.getHeight()) / 2);
+
+            parent = node.getParent();
+            brother = node;
+            direction = 0;
+        } else if (bottom < 0) {
+            //上吸附
+            indicator.setLayoutX(node.getX());
+            indicator.setLayoutY(node.getY() - (MARGIN_V + indicator.getHeight()) / 2);
+
+            parent = node.getParent();
+            brother = node;
+            direction = 2;
+        }
+        indicator.setVisible(true);
+
+    }
+
+    @Override
+    public void snap(NodeEntity node) {
+        if (node.getParent() == null || !indicator.isVisible()) {
+            indicator.setVisible(false);
+            return;
+        }
+        if (parent == null) {
+            node.getParent().getChildren().remove(node);
+            node.setParent(null);
+            StoreManager.getRootNodeList().add(node);
+        } else if (brother == null) {
+            NodeDao.moveNode(node, parent, 0);
+        }
+        indicator.setVisible(false);
+    }
 }
Index: src/main/java/cn/nanven/mindmap/service/NodeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.service;\r\n\r\nimport cn.nanven.mindmap.dao.NodeDao;\r\nimport cn.nanven.mindmap.modal.NodeEntity;\r\nimport cn.nanven.mindmap.service.layout.LayoutFactory;\r\nimport cn.nanven.mindmap.store.StoreManager;\r\nimport cn.nanven.mindmap.view.NodeView;\r\nimport javafx.beans.value.ChangeListener;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.geometry.Bounds;\r\nimport javafx.scene.Cursor;\r\nimport javafx.scene.control.ScrollPane;\r\nimport javafx.scene.input.MouseButton;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.Pane;\r\n\r\npublic class NodeService {\r\n    private static NodeService instance;\r\n    private Pane canvas;\r\n    private ScrollPane container;\r\n    private LayoutService layoutService;\r\n\r\n    private NodeService() {\r\n\r\n    }\r\n\r\n    private NodeService(ScrollPane container, Pane canvas) {\r\n        this.canvas = canvas;\r\n        this.container = container;\r\n        canvas.setFocusTraversable(true);\r\n        canvas.setOnMouseClicked(e -> {\r\n            canvas.requestFocus();\r\n            if (e.getButton() == MouseButton.PRIMARY) {\r\n                selectNode(null);\r\n            }\r\n        });\r\n        layoutService = LayoutFactory.getInstance().getService(\"mindMap\");\r\n    }\r\n\r\n    public static NodeService getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public static void init(ScrollPane container, Pane canvas) {\r\n        if (null == instance) {\r\n            instance = new NodeService(container, canvas);\r\n        }\r\n    }\r\n\r\n\r\n    private void addNode(NodeEntity parent, NodeEntity brother) {\r\n        NodeEntity newNode;\r\n        if (parent == null) {\r\n            newNode = NodeDao.newNode();\r\n        } else if (brother == null) {\r\n            newNode = NodeDao.newNode(parent);\r\n        } else {\r\n            newNode = NodeDao.newNode(parent, brother);\r\n        }\r\n\r\n        NodeView nodeView = new NodeView(newNode);\r\n        nodeView.setFocusTraversable(true);\r\n\r\n        this.canvas.getChildren().add(nodeView);\r\n\r\n        //等待节点渲染完成再进行布局\r\n        newNode.actualHeightProperty().addListener(new ChangeListener<>() {\r\n            @Override\r\n            public void changed(ObservableValue<? extends Number> observableValue, Number number, Number t1) {\r\n                LineService.getInstance().addLine(newNode.getParent(), newNode);\r\n                layoutService.layout();\r\n                selectNode(nodeView);\r\n                nodeView.focusText();\r\n                newNode.actualHeightProperty().removeListener(this);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void addSubNode() {\r\n        NodeView selectedNode = StoreManager.getSelectedNode();\r\n        if (selectedNode == null) {\r\n            addNode(null, null);\r\n        } else {\r\n            addNode(selectedNode.getNodeEntity(), null);\r\n        }\r\n    }\r\n\r\n    public void addBroNode() {\r\n        NodeView selectedNode = StoreManager.getSelectedNode();\r\n        if (selectedNode == null) {\r\n            addNode(null, null);\r\n        } else {\r\n            addNode(selectedNode.getNodeEntity().getParent(), selectedNode.getNodeEntity());\r\n        }\r\n    }\r\n\r\n    public void selectNode(NodeView newNode) {\r\n        NodeView prevNode = StoreManager.getSelectedNode();\r\n        if (newNode == prevNode) {\r\n            return;\r\n        }\r\n        if (prevNode != null) {\r\n            prevNode.getStyleClass().removeAll(\"node-selected\");\r\n            prevNode.getNodeEntity().setDisabled(true);\r\n        }\r\n        if (newNode != null) {\r\n            newNode.getStyleClass().addAll(\"node-selected\");\r\n        }\r\n        StoreManager.setSelectedNode(newNode);\r\n        ToolbarService.getInstance().syncState();\r\n    }\r\n\r\n    public void dragNode(NodeView node, double prevX, double prevY, MouseEvent e) {\r\n        if (node.getCursor() == Cursor.SE_RESIZE) {\r\n            node.getNodeEntity().widthProperty().set(e.getSceneX() - node.getLayoutX());\r\n            node.getNodeEntity().heightProperty().set(e.getSceneY() - node.getLayoutY() - 100);\r\n        } else if (node.getCursor() == Cursor.E_RESIZE) {\r\n            node.getNodeEntity().widthProperty().set(e.getSceneX() - node.getLayoutX());\r\n        } else if (node.getCursor() == Cursor.S_RESIZE) {\r\n            node.getNodeEntity().heightProperty().set(e.getSceneY() - node.getLayoutY() - 100);\r\n        } else {\r\n            Bounds viewportBounds = container.getViewportBounds();\r\n            double offsetY, offsetX;\r\n            offsetX = e.getSceneX() - prevX;\r\n            offsetY = e.getSceneY() - prevY;\r\n\r\n            //container跟随滚动\r\n            if (e.getSceneX() > container.getLayoutX() + viewportBounds.getWidth()) {\r\n                container.setHvalue(container.getHvalue() + (e.getSceneX() - container.getLayoutX() - viewportBounds.getWidth()) / viewportBounds.getWidth());\r\n            } else if (e.getSceneX() < container.getLayoutX()) {\r\n                container.setHvalue(container.getHvalue() - (container.getLayoutX() - e.getSceneX()) / viewportBounds.getWidth());\r\n            }\r\n\r\n            if (e.getSceneY() - 100 > container.getLayoutY() + viewportBounds.getHeight()) {\r\n                container.setVvalue(container.getVvalue() + (e.getSceneY() - 100 - container.getLayoutY() - viewportBounds.getHeight()) / viewportBounds.getHeight());\r\n            } else if (e.getSceneY() - 100 < container.getLayoutY()) {\r\n                container.setVvalue(container.getVvalue() + (container.getLayoutY() + e.getSceneY() - 100) / viewportBounds.getHeight());\r\n            }\r\n\r\n            node.getNodeEntity().xProperty().set(offsetX);\r\n            node.getNodeEntity().yProperty().set(offsetY);\r\n        }\r\n    }\r\n    public void dragDoneNode(NodeView nodeView, MouseEvent e){\r\n        layoutService.layout();\r\n    }\r\n\r\n    public void removeNode(NodeView node) {\r\n        canvas.getChildren().remove(node);\r\n        layoutService.layout();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/service/NodeService.java b/src/main/java/cn/nanven/mindmap/service/NodeService.java
--- a/src/main/java/cn/nanven/mindmap/service/NodeService.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/service/NodeService.java	(date 1711715684008)
@@ -4,6 +4,8 @@
 import cn.nanven.mindmap.modal.NodeEntity;
 import cn.nanven.mindmap.service.layout.LayoutFactory;
 import cn.nanven.mindmap.store.StoreManager;
+import cn.nanven.mindmap.util.AlgorithmUtil;
+import cn.nanven.mindmap.view.AuxiliaryNodeView;
 import cn.nanven.mindmap.view.NodeView;
 import javafx.beans.value.ChangeListener;
 import javafx.beans.value.ObservableValue;
@@ -14,6 +16,8 @@
 import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.Pane;
 
+import java.util.concurrent.atomic.AtomicReference;
+
 public class NodeService {
     private static NodeService instance;
     private Pane canvas;
@@ -35,6 +39,7 @@
             }
         });
         layoutService = LayoutFactory.getInstance().getService("mindMap");
+        StoreManager.setAuxiliaryNode(new AuxiliaryNodeView(canvas));
     }
 
     public static NodeService getInstance() {
@@ -121,9 +126,11 @@
             node.getNodeEntity().heightProperty().set(e.getSceneY() - node.getLayoutY() - 100);
         } else {
             Bounds viewportBounds = container.getViewportBounds();
-            double offsetY, offsetX;
-            offsetX = e.getSceneX() - prevX;
-            offsetY = e.getSceneY() - prevY;
+            double offsetX = e.getSceneX() - prevX;
+            double offsetY = e.getSceneY() - prevY;
+
+            final NodeEntity[] nearby = {null};
+            final double[] distance = {0.0};
 
             //container跟随滚动
             if (e.getSceneX() > container.getLayoutX() + viewportBounds.getWidth()) {
@@ -138,11 +145,33 @@
                 container.setVvalue(container.getVvalue() + (container.getLayoutY() + e.getSceneY() - 100) / viewportBounds.getHeight());
             }
 
-            node.getNodeEntity().xProperty().set(offsetX);
-            node.getNodeEntity().yProperty().set(offsetY);
+            StoreManager.getAuxiliaryNode().move(offsetX, offsetY);
+            for (NodeEntity root : StoreManager.getRootNodeList()) {
+                AlgorithmUtil.headMapNode(root, n -> {
+                    double centerX = n.getX() + n.getActualWidth() / 2;
+                    double centerY = n.getY() + n.getActualHeight() / 2;
+
+                    double currentDistance = Math.hypot(e.getSceneX() - centerX, e.getSceneY() - 100 - centerY);
+                    if (currentDistance <= distance[0] || distance[0] == 0.0) {
+                        distance[0] = currentDistance;
+                        nearby[0] = n;
+                    }
+
+                });
+            }
+            node.setDisable(true);
+            layoutService.indicate(nearby[0], e.getSceneX(), e.getSceneY() - 100);
         }
     }
-    public void dragDoneNode(NodeView nodeView, MouseEvent e){
+
+    public void dragDoneNode(NodeView node, double prevX, double prevY, MouseEvent e) {
+        StoreManager.getAuxiliaryNode().hide();
+        if (node.getNodeEntity().getParent() == null) {
+            node.getNodeEntity().setX(e.getSceneX() - prevX);
+            node.getNodeEntity().setY(e.getSceneY() - prevY);
+        }
+        node.setDisable(false);
+        layoutService.snap(node.getNodeEntity());
         layoutService.layout();
     }
 
Index: src/main/java/cn/nanven/mindmap/store/StoreManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.store;\r\n\r\nimport cn.nanven.mindmap.modal.NodeEntity;\r\nimport cn.nanven.mindmap.view.NodeView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StoreManager {\r\n    private static final List<NodeEntity> rootNodeList = new ArrayList<>();\r\n    private static NodeView selectedNode;\r\n    public static List<NodeEntity> getRootNodeList() {\r\n        return rootNodeList;\r\n    }\r\n\r\n    public static NodeView getSelectedNode() {\r\n        return selectedNode;\r\n    }\r\n\r\n    public static void setSelectedNode(NodeView selectedNode) {\r\n        StoreManager.selectedNode = selectedNode;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/store/StoreManager.java b/src/main/java/cn/nanven/mindmap/store/StoreManager.java
--- a/src/main/java/cn/nanven/mindmap/store/StoreManager.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/store/StoreManager.java	(date 1711603070057)
@@ -1,6 +1,7 @@
 package cn.nanven.mindmap.store;
 
 import cn.nanven.mindmap.modal.NodeEntity;
+import cn.nanven.mindmap.view.AuxiliaryNodeView;
 import cn.nanven.mindmap.view.NodeView;
 
 import java.util.ArrayList;
@@ -9,10 +10,20 @@
 public class StoreManager {
     private static final List<NodeEntity> rootNodeList = new ArrayList<>();
     private static NodeView selectedNode;
+    private static AuxiliaryNodeView auxiliaryNode;
+
     public static List<NodeEntity> getRootNodeList() {
         return rootNodeList;
     }
 
+    public static AuxiliaryNodeView getAuxiliaryNode() {
+        return auxiliaryNode;
+    }
+
+    public static void setAuxiliaryNode(AuxiliaryNodeView auxiliaryNode) {
+        StoreManager.auxiliaryNode = auxiliaryNode;
+    }
+
     public static NodeView getSelectedNode() {
         return selectedNode;
     }
Index: src/main/java/cn/nanven/mindmap/service/LayoutService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.service;\r\n\r\npublic interface LayoutService {\r\n    void layout();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/service/LayoutService.java b/src/main/java/cn/nanven/mindmap/service/LayoutService.java
--- a/src/main/java/cn/nanven/mindmap/service/LayoutService.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/service/LayoutService.java	(date 1711715245738)
@@ -1,5 +1,9 @@
 package cn.nanven.mindmap.service;
 
+import cn.nanven.mindmap.modal.NodeEntity;
+
 public interface LayoutService {
     void layout();
+    void indicate(NodeEntity node,double x,double y);
+    void snap(NodeEntity node);
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>cn.nanven</groupId>\r\n    <artifactId>mindmap</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <name>mindmap</name>\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <junit.version>5.10.0</junit.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>17.0.6</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>17.0.6</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-api</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-engine</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.11.0</version>\r\n                <configuration>\r\n                    <source>17</source>\r\n                    <target>17</target>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.8</version>\r\n                <executions>\r\n                    <execution>\r\n                        <!-- Default configuration for running with: mvn clean javafx:run -->\r\n                        <id>default-cli</id>\r\n                        <configuration>\r\n                            <mainClass>cn.nanven.mindmap/cn.nanven.mindmap.Application</mainClass>\r\n                            <launcher>app</launcher>\r\n                            <jlinkZipName>app</jlinkZipName>\r\n                            <jlinkImageName>app</jlinkImageName>\r\n                            <noManPages>true</noManPages>\r\n                            <stripDebug>true</stripDebug>\r\n                            <noHeaderFiles>true</noHeaderFiles>\r\n                        </configuration>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/pom.xml	(date 1711968676149)
@@ -25,7 +25,6 @@
             <artifactId>javafx-fxml</artifactId>
             <version>17.0.6</version>
         </dependency>
-
         <dependency>
             <groupId>org.junit.jupiter</groupId>
             <artifactId>junit-jupiter-api</artifactId>
Index: src/main/resources/cn/nanven/mindmap/main.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#base {\r\n    -fx-border-radius: 4;\r\n    -fx-border-color: #dedede;\r\n    -fx-border-width: 1;\r\n    -fx-background-color: #ffffff;\r\n    -fx-background-radius: 4;\r\n}\r\n\r\n#base.max {\r\n    -fx-border-radius: 0;\r\n    -fx-background-radius: 0;\r\n}\r\n\r\nButton {\r\n    -fx-background-insets: null\r\n}\r\n\r\n.context-menu {\r\n    -fx-effect: dropshadow(three-pass-box, #a4a4a4, 8, 0.01, 0, 3);\r\n    -fx-padding: 8 2 8 2;\r\n    -fx-background-radius: 4;\r\n    -fx-border-radius: 4;\r\n    -fx-border-color: #fff;\r\n}\r\n\r\n.menu-item {\r\n    -fx-border-width: 0;\r\n    -fx-padding: 4 8 4 8;\r\n    -fx-pref-height: 28;\r\n    -fx-background-radius: 4;\r\n}\r\n\r\n.menu-item .label {\r\n    -fx-text-fill: #212121;\r\n}\r\n\r\n.menu-item .description {\r\n    -fx-text-fill: #a1a1a1;\r\n}\r\n\r\n.menu-item:hover, .menu-item:focused {\r\n    -fx-background-color: rgb(228, 232, 234);\r\n}\r\n\r\n.sys-btn {\r\n    -fx-background-radius: 0;\r\n    -fx-background-color: null;\r\n}\r\n\r\n.sys-btn:hover {\r\n    -fx-background-color: rgb(232, 235, 238);\r\n}\r\n\r\n.sys-btn Region {\r\n    -fx-background-color: #696969;\r\n}\r\n\r\n#window-close-btn:hover {\r\n    -fx-background-color: red;\r\n}\r\n\r\n#window-close-btn:hover Region {\r\n    -fx-background-color: #fff;\r\n}\r\n\r\n.menu-bar {\r\n    -fx-background-color: null;\r\n}\r\n\r\n.menu-bar .menu-button {\r\n    -fx-pref-height: 30;\r\n    -fx-background-color: null;\r\n    -fx-background-radius: 4px;\r\n    -fx-text-fill: #212121;\r\n}\r\n\r\n.menu-bar .menu-button:hover .label, .menu-bar .menu-button:showing .label {\r\n    -fx-text-fill: #212121;\r\n}\r\n\r\n.menu-bar .menu-button:hover {\r\n    -fx-background-color: rgb(232, 235, 238);\r\n\r\n}\r\n\r\n.menu-bar .menu-button:showing {\r\n    -fx-background-color: rgb(232, 235, 238);\r\n}\r\n\r\n.menu-bar .menu-button:pressed {\r\n    -fx-background-color: rgb(228, 231, 234);\r\n}\r\n\r\n.toolbar {\r\n    -fx-background-color: rgb(237, 242, 250);\r\n    -fx-background-radius: 42;\r\n}\r\n\r\n.toolbar .icon {\r\n    -fx-background-color: #525252;\r\n}\r\n\r\n.toolbar .divider {\r\n    -fx-background-color: #b6b6b6;\r\n}\r\n\r\n.toolbar .toggle-button:selected {\r\n    -fx-background-color: rgb(211, 227, 253);\r\n}\r\n\r\n.toolbar .toggle-button:selected:hover {\r\n    -fx-background-color: rgb(191, 207, 236);\r\n}\r\n\r\n.toolbar .button, .toolbar .toggle-button {\r\n    -fx-background-color: null;\r\n    -fx-background-radius: 6;\r\n}\r\n\r\n.toolbar .button:hover, .toolbar .toggle-button:hover {\r\n    -fx-background-color: rgb(223, 229, 235);\r\n}\r\n\r\n.toolbar .button:pressed, .toolbar .toggle-button:pressed {\r\n    -fx-background-color: rgb(217, 220, 226);\r\n}\r\n\r\n.toolbar .menu-button, .toolbar .color-picker {\r\n    -fx-background-color: null;\r\n    -fx-padding: 0;\r\n    -fx-background-insets: null;\r\n    -fx-background-radius: 6;\r\n}\r\n\r\n.toolbar .menu-button:hover, .toolbar .color-picker:hover {\r\n    -fx-background-color: rgb(223, 229, 235);\r\n}\r\n\r\n.toolbar .menu-button:pressed, .toolbar .color-picker:pressed {\r\n    -fx-background-color: rgb(220, 224, 231);\r\n}\r\n\r\n.font-color-picker .picker-color-rect {\r\n    visibility: hidden;\r\n}\r\n\r\n.toolbar .menu-button > .label {\r\n    -fx-background-color: null;\r\n    -fx-padding: 0 0 0 8;\r\n}\r\n\r\n#sidebar-tab {\r\n    -fx-border-radius: 42;\r\n    -fx-border-width: 1;\r\n    -fx-border-color: #ccc;\r\n}\r\n\r\n#sidebar-tab Button {\r\n    -fx-background-color: null;\r\n    -fx-background-radius: 40;\r\n}\r\n\r\n#sidebar-tab Button.active, #sidebar-tab Button:hover {\r\n    -fx-background-color: rgb(232, 235, 238);\r\n}\r\n\r\n.canvas-container {\r\n    -fx-background-color: #ffffff;\r\n    -fx-border-radius: 0 16 0 0;\r\n    -fx-border-color: #dedede;\r\n    -fx-border-width: 1 1 0 0;\r\n    -fx-background-radius: 0 16 0 0;\r\n    -fx-effect: null;\r\n    -fx-padding: 0;\r\n    -fx-border-insets: null;\r\n    -fx-background-insets: null;\r\n}\r\n\r\n.canvas-container .viewport {\r\n    -fx-background-color: #ffffff;\r\n    -fx-background-radius: 0 16 0 0;\r\n}\r\n\r\n.scroll-pane .scroll-bar {\r\n    -fx-background-color: null;\r\n    -fx-border-color: null;\r\n}\r\n\r\n/*轨道样式*/\r\n.scroll-pane .scroll-bar:horizontal .track,\r\n.scroll-bar:vertical .track {\r\n    -fx-background-color: null;\r\n    -fx-padding: 28 0 0 0;\r\n    -fx-border-color: transparent;\r\n    -fx-background-radius: 0;\r\n    -fx-border-radius: 2;\r\n}\r\n\r\n/*横向滚动条增减按钮样式*/\r\n.scroll-pane .scroll-bar:horizontal .increment-button,\r\n.scroll-pane .scroll-bar:horizontal .decrement-button {\r\n    -fx-background-color: transparent;\r\n    -fx-background-radius: 0em;\r\n    -fx-padding: 0 0 10 0;\r\n}\r\n\r\n/*竖向滚动条增减按钮样式*/\r\n.scroll-pane .scroll-bar:vertical .increment-button,\r\n.scroll-pane .scroll-bar:vertical .decrement-button {\r\n    -fx-background-color: transparent;\r\n    -fx-background-radius: 0em;\r\n    -fx-padding: 0 10 0 0;\r\n}\r\n\r\n/*增减按钮中图标样式*/\r\n.scroll-pane .scroll-bar .increment-arrow,\r\n.scroll-pane .scroll-bar .decrement-arrow {\r\n    -fx-background-color: transparent;\r\n    -fx-shape: \" \";\r\n    -fx-padding: 0;\r\n}\r\n\r\n/*滚动条滑块样式*/\r\n.scroll-pane .scroll-bar:horizontal .thumb,\r\n.scroll-pane .scroll-bar:vertical .thumb {\r\n    -fx-background-color: #e1e1e1;\r\n    -fx-background-insets: 2, 0, 0;\r\n    -fx-background-radius: 2;\r\n}\r\n\r\n.scroll-pane .scroll-bar:horizontal .thumb:hover,\r\n.scroll-pane .scroll-bar:vertical .thumb:hover {\r\n    -fx-background-color: #b6b6b6;\r\n}\r\n\r\n.mind-map-canvas {\r\n    -fx-background-color: #fff;\r\n}\r\n\r\n#sidebar-container {\r\n    -fx-background-color: rgb(237, 242, 250);\r\n    -fx-background-radius: 16;\r\n}\r\n\r\n#sidebar-content {\r\n    -fx-background-color: #ffffff;\r\n    -fx-background-radius: 12;\r\n}\r\n\r\n#sidebar-title {\r\n    -fx-text-fill: #3f3f3f;\r\n}\r\n\r\n#sidebar-fold-btn {\r\n    -fx-background-color: null;\r\n    -fx-background-radius: 24;\r\n}\r\n\r\n#sidebar-fold-btn Region {\r\n    -fx-background-color: #8f8f8f;\r\n}\r\n\r\n#sidebar-fold-btn:hover {\r\n    -fx-background-color: rgb(223, 229, 235);\r\n}\r\n\r\n#sidebar-fold-btn:pressed {\r\n    -fx-background-color: rgb(217, 220, 226);\r\n}\r\n\r\n.node-box {\r\n    -fx-padding: 2 12 2 12;\r\n    -fx-border-radius: 8;\r\n    -fx-border-width: 2;\r\n    -fx-border-color: transparent;\r\n\r\n}\r\n\r\n.node-box:hover {\r\n    -fx-border-style: dashed;\r\n    -fx-border-color: #212121;\r\n}\r\n\r\n.node-selected, .node-box.node-selected:hover {\r\n    -fx-border-style: solid;\r\n    -fx-border-color: #212121;\r\n}\r\n\r\n.node-text {\r\n    -fx-background-color: null;\r\n    -fx-background-insets: 0;\r\n    -fx-border-width: 0;\r\n    -fx-padding: 0;\r\n}\r\n\r\n.node-text:disabled {\r\n    -fx-opacity: 1;\r\n}\r\n\r\n.node-text.underline .text {\r\n    -fx-underline: true;\r\n}\r\n\r\n.mini-icon {\r\n    -fx-shape: \"M6 19h12v2H6z\";\r\n}\r\n\r\n.window-icon {\r\n    -fx-shape: \"M19 4H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 14H5V6h14z\";\r\n}\r\n\r\n.close-icon {\r\n    -fx-shape: \"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z\";\r\n}\r\n\r\n.plus-icon {\r\n    -fx-shape: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\";\r\n}\r\n\r\n.undo-icon {\r\n    -fx-shape: \"M8 19q-.425 0-.712-.288T7 18q0-.425.288-.712T8 17h6.1q1.575 0 2.738-1T18 13.5q0-1.5-1.162-2.5T14.1 10H7.8l1.9 1.9q.275.275.275.7t-.275.7q-.275.275-.7.275t-.7-.275L4.7 9.7q-.15-.15-.213-.325T4.426 9q0-.2.063-.375T4.7 8.3l3.6-3.6q.275-.275.7-.275t.7.275q.275.275.275.7t-.275.7L7.8 8h6.3q2.425 0 4.163 1.575T20 13.5q0 2.35-1.737 3.925T14.1 19z\";\r\n}\r\n\r\n.redo-icon {\r\n    -fx-shape: \"M16.2 10H9.9q-1.575 0-2.738 1T6 13.5Q6 15 7.163 16T9.9 17H16q.425 0 .713.288T17 18q0 .425-.288.713T16 19H9.9q-2.425 0-4.163-1.575T4 13.5q0-2.35 1.738-3.925T9.9 8h6.3l-1.9-1.9q-.275-.275-.275-.7t.275-.7q.275-.275.7-.275t.7.275l3.6 3.6q.15.15.213.325t.062.375q0 .2-.062.375T19.3 9.7l-3.6 3.6q-.275.275-.7.275t-.7-.275q-.275-.275-.275-.7t.275-.7z\";\r\n}\r\n\r\n.bold-icon {\r\n    -fx-shape: \"M8.8 19q-.825 0-1.412-.587T6.8 17V7q0-.825.588-1.412T8.8 5h3.525q1.625 0 3 1T16.7 8.775q0 1.275-.575 1.963t-1.075.987q.625.275 1.388 1.025T17.2 15q0 2.225-1.625 3.113t-3.05.887zm1.025-2.8h2.6q1.2 0 1.463-.612t.262-.888q0-.275-.262-.887T12.35 13.2H9.825zm0-5.7h2.325q.825 0 1.2-.425t.375-.95q0-.6-.425-.975t-1.1-.375H9.825z\";\r\n}\r\n\r\n.italic-icon {\r\n    -fx-shape: \"M6.25 19q-.525 0-.888-.363T5 17.75q0-.525.363-.888t.887-.362H9l3-9H9.25q-.525 0-.888-.363T8 6.25q0-.525.363-.888T9.25 5h7.5q.525 0 .888.363T18 6.25q0 .525-.363.888t-.887.362H14.5l-3 9h2.25q.525 0 .888.363t.362.887q0 .525-.363.888T13.75 19z\";\r\n}\r\n\r\n.underline-icon {\r\n    -fx-shape: \"M6 21q-.425 0-.712-.288T5 20q0-.425.288-.712T6 19h12q.425 0 .713.288T19 20q0 .425-.288.713T18 21zm6-4q-2.525 0-3.925-1.575t-1.4-4.175V4.275q0-.525.388-.9T7.975 3q.525 0 .9.375t.375.9V11.4q0 1.4.7 2.275t2.05.875q1.35 0 2.05-.875t.7-2.275V4.275q0-.525.388-.9T16.05 3q.525 0 .9.375t.375.9v6.975q0 2.6-1.4 4.175T12 17\";\r\n}\r\n\r\n.align-left-icon {\r\n    -fx-shape: \"M4 21q-.425 0-.712-.288T3 20q0-.425.288-.712T4 19h16q.425 0 .713.288T21 20q0 .425-.288.713T20 21zm0-4q-.425 0-.712-.288T3 16q0-.425.288-.712T4 15h10q.425 0 .713.288T15 16q0 .425-.288.713T14 17zm0-4q-.425 0-.712-.288T3 12q0-.425.288-.712T4 11h16q.425 0 .713.288T21 12q0 .425-.288.713T20 13zm0-4q-.425 0-.712-.288T3 8q0-.425.288-.712T4 7h10q.425 0 .713.288T15 8q0 .425-.288.713T14 9zm0-4q-.425 0-.712-.288T3 4q0-.425.288-.712T4 3h16q.425 0 .713.288T21 4q0 .425-.288.713T20 5z\";\r\n}\r\n\r\n.align-center-icon {\r\n    -fx-shape: \"M4 21q-.425 0-.712-.288T3 20q0-.425.288-.712T4 19h16q.425 0 .713.288T21 20q0 .425-.288.713T20 21zm4-4q-.425 0-.712-.288T7 16q0-.425.288-.712T8 15h8q.425 0 .713.288T17 16q0 .425-.288.713T16 17zm-4-4q-.425 0-.712-.288T3 12q0-.425.288-.712T4 11h16q.425 0 .713.288T21 12q0 .425-.288.713T20 13zm4-4q-.425 0-.712-.288T7 8q0-.425.288-.712T8 7h8q.425 0 .713.288T17 8q0 .425-.288.713T16 9zM4 5q-.425 0-.712-.288T3 4q0-.425.288-.712T4 3h16q.425 0 .713.288T21 4q0 .425-.288.713T20 5z\";\r\n}\r\n\r\n.align-right-icon {\r\n    -fx-shape: \"M4 5q-.425 0-.712-.288T3 4q0-.425.288-.712T4 3h16q.425 0 .713.288T21 4q0 .425-.288.713T20 5zm6 4q-.425 0-.712-.288T9 8q0-.425.288-.712T10 7h10q.425 0 .713.288T21 8q0 .425-.288.713T20 9zm-6 4q-.425 0-.712-.288T3 12q0-.425.288-.712T4 11h16q.425 0 .713.288T21 12q0 .425-.288.713T20 13zm6 4q-.425 0-.712-.288T9 16q0-.425.288-.712T10 15h10q.425 0 .713.288T21 16q0 .425-.288.713T20 17zm-6 4q-.425 0-.712-.288T3 20q0-.425.288-.712T4 19h16q.425 0 .713.288T21 20q0 .425-.288.713T20 21z\";\r\n}\r\n\r\n.text-color-icon {\r\n    -fx-shape: \"M3 24q-.425 0-.712-.288T2 23v-2q0-.425.288-.712T3 20h18q.425 0 .713.288T22 21v2q0 .425-.288.713T21 24zm4.125-7q-.575 0-.913-.488t-.137-1.037l4.4-11.725q.125-.35.425-.55t.65-.2h.9q.375 0 .663.2t.412.55L17.95 15.5q.2.55-.137 1.025T16.9 17q-.35 0-.65-.2t-.425-.55l-.975-2.85H9.2l-1.025 2.875q-.125.35-.413.538T7.126 17M9.9 11.4h4.2l-2.05-5.8h-.1z\";\r\n}\r\n\r\n.delete-icon {\r\n    -fx-shape: \"M7 21q-.825 0-1.412-.587T5 19V6q-.425 0-.712-.288T4 5q0-.425.288-.712T5 4h4q0-.425.288-.712T10 3h4q.425 0 .713.288T15 4h4q.425 0 .713.288T20 5q0 .425-.288.713T19 6v13q0 .825-.587 1.413T17 21zM17 6H7v13h10zm-7 11q.425 0 .713-.288T11 16V9q0-.425-.288-.712T10 8q-.425 0-.712.288T9 9v7q0 .425.288.713T10 17m4 0q.425 0 .713-.288T15 16V9q0-.425-.288-.712T14 8q-.425 0-.712.288T13 9v7q0 .425.288.713T14 17M7 6v13z\";\r\n}\r\n\r\n.chevron-right-icon {\r\n    -fx-shape: \"M12.6 12L8.7 8.1q-.275-.275-.275-.7t.275-.7q.275-.275.7-.275t.7.275l4.6 4.6q.15.15.213.325t.062.375q0 .2-.062.375t-.213.325l-4.6 4.6q-.275.275-.7.275t-.7-.275q-.275-.275-.275-.7t.275-.7z\";\r\n}\r\n\r\n.icon.disabled, text-color-icon.disabled {\r\n    -fx-background-color: rgb(175, 178, 183);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/cn/nanven/mindmap/main.css b/src/main/resources/cn/nanven/mindmap/main.css
--- a/src/main/resources/cn/nanven/mindmap/main.css	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/resources/cn/nanven/mindmap/main.css	(date 1711628869616)
@@ -273,7 +273,9 @@
     -fx-border-radius: 8;
     -fx-border-width: 2;
     -fx-border-color: transparent;
-
+}
+.node-box:disabled{
+    -fx-opacity: 0.6;
 }
 
 .node-box:hover {
Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module cn.nanven.mindmap {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n\r\n\r\n    opens cn.nanven.mindmap to javafx.fxml;\r\n    exports cn.nanven.mindmap;\r\n    exports cn.nanven.mindmap.controller;\r\n    opens cn.nanven.mindmap.controller to javafx.fxml;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/module-info.java	(date 1711969971205)
@@ -2,7 +2,6 @@
     requires javafx.controls;
     requires javafx.fxml;
 
-
     opens cn.nanven.mindmap to javafx.fxml;
     exports cn.nanven.mindmap;
     exports cn.nanven.mindmap.controller;
Index: src/main/java/cn/nanven/mindmap/service/layout/LayoutFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package cn.nanven.mindmap.service.layout;\r\n\r\nimport cn.nanven.mindmap.service.LayoutService;\r\nimport javafx.scene.layout.Pane;\r\n\r\npublic class LayoutFactory {\r\n    private static LayoutFactory instance;\r\n    private Pane canvas;\r\n\r\n    private LayoutFactory() {\r\n\r\n    }\r\n\r\n    private LayoutFactory(Pane canvas) {\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    public static void init(Pane canvas) {\r\n        if (null == instance) {\r\n            instance = new LayoutFactory(canvas);\r\n        }\r\n    }\r\n\r\n    public static LayoutFactory getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public LayoutService getService(String type) {\r\n        switch (type) {\r\n            default -> {\r\n                return new MindMapLayout();\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/service/layout/LayoutFactory.java b/src/main/java/cn/nanven/mindmap/service/layout/LayoutFactory.java
--- a/src/main/java/cn/nanven/mindmap/service/layout/LayoutFactory.java	(revision 7cec0082708cfd4660df43b139caa1a199bf5c4b)
+++ b/src/main/java/cn/nanven/mindmap/service/layout/LayoutFactory.java	(date 1711685717177)
@@ -28,7 +28,7 @@
     public LayoutService getService(String type) {
         switch (type) {
             default -> {
-                return new MindMapLayout();
+                return new MindMapLayout(canvas);
             }
         }
     }
Index: src/main/java/cn/nanven/mindmap/view/AuxiliaryNodeView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/view/AuxiliaryNodeView.java b/src/main/java/cn/nanven/mindmap/view/AuxiliaryNodeView.java
new file mode 100644
--- /dev/null	(date 1711628630926)
+++ b/src/main/java/cn/nanven/mindmap/view/AuxiliaryNodeView.java	(date 1711628630926)
@@ -0,0 +1,59 @@
+package cn.nanven.mindmap.view;
+
+import cn.nanven.mindmap.modal.NodeEntity;
+import javafx.scene.control.TextField;
+import javafx.scene.layout.AnchorPane;
+import javafx.scene.layout.Pane;
+
+public class AuxiliaryNodeView extends AnchorPane {
+    private static final String BASE_CLASS = "node-box";
+    private static final String TEXT_CLASS = "node-text";
+    private final TextField textField;
+    private final Pane canvas;
+
+    public AuxiliaryNodeView(Pane canvas) {
+        this.canvas=canvas;
+        this.getStyleClass().add(BASE_CLASS);
+        this.setVisible(false);
+
+        textField = new TextField();
+        textField.getStyleClass().add(TEXT_CLASS);
+        AnchorPane.setTopAnchor(textField, 0.0);
+        AnchorPane.setRightAnchor(textField, 0.0);
+        AnchorPane.setBottomAnchor(textField, 0.0);
+        AnchorPane.setLeftAnchor(textField, 0.0);
+        textField.setPrefWidth(-1);
+        textField.setDisable(true);
+
+        this.getChildren().add(textField);
+    }
+
+    public void render(NodeEntity node) {
+        this.setPrefWidth(node.getActualWidth());
+        this.setPrefHeight(node.getActualHeight());
+        this.setBackground(node.getBackground());
+
+        textField.setText(node.getContent());
+        textField.setAlignment(node.getAlignment());
+        textField.setStyle("-fx-text-fill:#" + node.getColor().toString().substring(2));
+        textField.setFont(node.getFont());
+        if (node.isFontUnderline()) {
+            textField.getStyleClass().add("underline");
+        } else textField.getStyleClass().remove("underline");
+
+        canvas.getChildren().add(this);
+    }
+
+    public void move(double x, double y) {
+        this.setLayoutX(x);
+        this.setLayoutY(y);
+        if (!this.isVisible()) {
+            this.setVisible(true);
+        }
+    }
+
+    public void hide() {
+        this.setVisible(false);
+        canvas.getChildren().remove(this);
+    }
+}
Index: src/main/java/cn/nanven/mindmap/util/MapEventHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/util/MapEventHandler.java b/src/main/java/cn/nanven/mindmap/util/MapEventHandler.java
new file mode 100644
--- /dev/null	(date 1711632191983)
+++ b/src/main/java/cn/nanven/mindmap/util/MapEventHandler.java	(date 1711632191983)
@@ -0,0 +1,8 @@
+package cn.nanven.mindmap.util;
+
+import cn.nanven.mindmap.modal.NodeEntity;
+
+@FunctionalInterface
+public interface MapEventHandler {
+    void handle(NodeEntity node);
+}
Index: src/main/java/cn/nanven/mindmap/util/AlgorithmUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/cn/nanven/mindmap/util/AlgorithmUtil.java b/src/main/java/cn/nanven/mindmap/util/AlgorithmUtil.java
new file mode 100644
--- /dev/null	(date 1711633616646)
+++ b/src/main/java/cn/nanven/mindmap/util/AlgorithmUtil.java	(date 1711633616646)
@@ -0,0 +1,19 @@
+package cn.nanven.mindmap.util;
+
+import cn.nanven.mindmap.modal.NodeEntity;
+import cn.nanven.mindmap.store.StoreManager;
+
+public class AlgorithmUtil {
+    public static void headMapNode(NodeEntity node, MapEventHandler handler) {
+        handler.handle(node);
+        for (NodeEntity child : node.getChildren()) {
+            headMapNode(child, handler);
+        }
+    }
+    public static void tailMapNode(NodeEntity node, MapEventHandler handler) {
+        for (NodeEntity child : node.getChildren()) {
+            tailMapNode(child, handler);
+        }
+        handler.handle(node);
+    }
+}
